name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    
jobs:
    unit-testing:
        container: 
          image: node:20
          
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
    
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'  
        
        - name: Install Dependency
          run: npm install

        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: ${{ always() }}
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}


      - name: Install Dependency
        run: npm install
  
      - name: Run Code coverage
        run: npm run coverage
        continue-on-error: true

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with: 
          name: Code-coverage-result
          path: coverage
          retention-days: 5

    docker:
      permissions: 
        packages: write
      name: docker
      runs-on: ubuntu-latest
      needs: [unit-testing,code-coverage]
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: dinesh4363
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to GHCR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/dinesh4363/solar-system:${{ github.sha }}

    dev-deploy:
      name: dev Deploy
      runs-on: ubuntu-latest
      needs: docker
      environment: 
        name: development

      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: Install kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.26.0' # default is latest stable
        - name: Set kube context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - name: Verify kubectl version
          run: kubectl version --short -o yaml
        - name: Fetch Ingress IP address
          run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV